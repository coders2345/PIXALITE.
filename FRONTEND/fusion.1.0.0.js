!function(e){var n={};function t(c){if(n[c])return n[c].exports;var l=n[c]={i:c,l:!1,exports:{}};return e[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=e,t.c=n,t.d=function(e,n,c){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:c})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var l in e)t.d(c,l,function(n){return e[n]}.bind(null,l));return c},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=16)}([,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  SCENE_PLUGINS_READY: 'SCENE_PLUGINS_READY',\n  SCENE_PRE_READY: 'SCENE_PRE_READY',\n  SCENE_READY: 'SCENE_READY'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9mdXNpb24vQ29uc3QuanM/YTE5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIFNDRU5FX1BMVUdJTlNfUkVBRFk6ICdTQ0VORV9QTFVHSU5TX1JFQURZJyxcbiAgU0NFTkVfUFJFX1JFQURZOiAnU0NFTkVfUFJFX1JFQURZJyxcbiAgU0NFTkVfUkVBRFk6ICdTQ0VORV9SRUFEWSdcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _default; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Nano Events\n * Taken from https://github.com/ai/nanoevents (MIT license)\n */\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default() {\n    _classCallCheck(this, _default);\n\n    _defineProperty(this, "events", {});\n  }\n  /**\n   * Calls each of the listeners registered for a given event.\n   *\n   * @param {string} event The event name.\n   * @param {...*} arguments The arguments for listeners.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * ee.emit(\'tick\', tickType, tickDuration)\n   *\n   * @alias NanoEvents#emit\n   * @method\n   */\n\n\n  _createClass(_default, [{\n    key: "emit",\n    value: function emit(event) {\n      var args = [].slice.call(arguments, 1) // Array.prototype.call() returns empty array if context is not array-like\n      ;\n      [].slice.call(this.events[event] || []).filter(function (i) {\n        i.apply(null, args);\n      });\n    }\n    /**\n     * Add a listener for a given event.\n     *\n     * @param {string} event The event name.\n     * @param {function} cb The listener function.\n     *\n     * @return {function} Unbind listener from event.\n     *\n     * @example\n     * const unbind = ee.on(\'tick\', (tickType, tickDuration) => {\n     *   count += 1\n     * })\n     *\n     * disable () {\n     *   unbind()\n     * }\n     *\n     * @alias NanoEvents#on\n     * @method\n     */\n\n  }, {\n    key: "on",\n    value: function on(event, cb) {\n      if (false) {}\n\n      (this.events[event] = this.events[event] || []).push(cb);\n      return function () {\n        this.events[event] = this.events[event].filter(function (i) {\n          return i !== cb;\n        });\n      }.bind(this);\n    }\n    /**\n     * Removes all listeners.\n     *\n     * @returns {undefined}\n     *\n     * @example\n     * unbindAll(emitter)\n     */\n\n  }, {\n    key: "unbindAll",\n    value: function unbindAll() {\n      this.events = {};\n    }\n  }]);\n\n  return _default;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2xpYnMvbmFub2V2ZW50cy5qcz9kYTNiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuLyoqXG4gKiBOYW5vIEV2ZW50c1xuICogVGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWkvbmFub2V2ZW50cyAoTUlUIGxpY2Vuc2UpXG4gKi9cbnZhciBfZGVmYXVsdCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIF9kZWZhdWx0KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBfZGVmYXVsdCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJldmVudHNcIiwge30pO1xuICB9XG4gIC8qKlxuICAgKiBDYWxscyBlYWNoIG9mIHRoZSBsaXN0ZW5lcnMgcmVnaXN0ZXJlZCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICAgKiBAcGFyYW0gey4uLip9IGFyZ3VtZW50cyBUaGUgYXJndW1lbnRzIGZvciBsaXN0ZW5lcnMuXG4gICAqXG4gICAqIEByZXR1cm4ge3VuZGVmaW5lZH1cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogZWUuZW1pdCgndGljaycsIHRpY2tUeXBlLCB0aWNrRHVyYXRpb24pXG4gICAqXG4gICAqIEBhbGlhcyBOYW5vRXZlbnRzI2VtaXRcbiAgICogQG1ldGhvZFxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhfZGVmYXVsdCwgW3tcbiAgICBrZXk6IFwiZW1pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0KGV2ZW50KSB7XG4gICAgICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSAvLyBBcnJheS5wcm90b3R5cGUuY2FsbCgpIHJldHVybnMgZW1wdHkgYXJyYXkgaWYgY29udGV4dCBpcyBub3QgYXJyYXktbGlrZVxuICAgICAgO1xuICAgICAgW10uc2xpY2UuY2FsbCh0aGlzLmV2ZW50c1tldmVudF0gfHwgW10pLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICBpLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZCBhIGxpc3RlbmVyIGZvciBhIGdpdmVuIGV2ZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNiIFRoZSBsaXN0ZW5lciBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge2Z1bmN0aW9ufSBVbmJpbmQgbGlzdGVuZXIgZnJvbSBldmVudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3QgdW5iaW5kID0gZWUub24oJ3RpY2snLCAodGlja1R5cGUsIHRpY2tEdXJhdGlvbikgPT4ge1xuICAgICAqICAgY291bnQgKz0gMVxuICAgICAqIH0pXG4gICAgICpcbiAgICAgKiBkaXNhYmxlICgpIHtcbiAgICAgKiAgIHVuYmluZCgpXG4gICAgICogfVxuICAgICAqXG4gICAgICogQGFsaWFzIE5hbm9FdmVudHMjb25cbiAgICAgKiBAbWV0aG9kXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbihldmVudCwgY2IpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBjYiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICAgICAgfVxuXG4gICAgICAodGhpcy5ldmVudHNbZXZlbnRdID0gdGhpcy5ldmVudHNbZXZlbnRdIHx8IFtdKS5wdXNoKGNiKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50XSA9IHRoaXMuZXZlbnRzW2V2ZW50XS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaSAhPT0gY2I7XG4gICAgICAgIH0pO1xuICAgICAgfS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBsaXN0ZW5lcnMuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiB1bmJpbmRBbGwoZW1pdHRlcilcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInVuYmluZEFsbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bmJpbmRBbGwoKSB7XG4gICAgICB0aGlzLmV2ZW50cyA9IHt9O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBfZGVmYXVsdDtcbn0oKTtcblxuZXhwb3J0IHsgX2RlZmF1bHQgYXMgZGVmYXVsdCB9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n')},function(module){eval('module.exports = JSON.parse("{\\"name\\":\\"hero\\",\\"version\\":\\"1.0.0\\",\\"description\\":\\"\\",\\"private\\":true,\\"scripts\\":{\\"dev\\":\\"npx webpack --watch --devtool \'cheap-eval-source-map\'\\",\\"build\\":\\"npx webpack --mode \'production\'\\",\\"serve\\":\\"http-server -g -c-1\\"},\\"author\\":\\"Simon Widjaja\\",\\"devDependencies\\":{\\"@babel/cli\\":\\"^7.7.0\\",\\"@babel/core\\":\\"^7.7.2\\",\\"@babel/node\\":\\"^7.7.0\\",\\"@babel/plugin-proposal-class-properties\\":\\"^7.7.0\\",\\"@babel/preset-env\\":\\"^7.7.1\\",\\"@babel/register\\":\\"^7.7.0\\",\\"babel-register\\":\\"^6.26.0\\",\\"webpack\\":\\"^4.44.2\\",\\"webpack-cli\\":\\"^3.3.11\\",\\"webpack-dev-server\\":\\"^3.9.0\\"},\\"dependencies\\":{\\"@babel/plugin-transform-async-to-generator\\":\\"^7.7.0\\",\\"babel-loader\\":\\"^8.0.6\\",\\"core-js\\":\\"^3.4.0\\",\\"css-loader\\":\\"^3.6.0\\",\\"fs-extra\\":\\"^9.0.1\\",\\"lodash.debounce\\":\\"^4.0.8\\",\\"lodash.throttle\\":\\"^4.1.1\\",\\"node-sass\\":\\"^4.13.1\\",\\"regenerator-runtime\\":\\"^0.13.3\\",\\"sass-loader\\":\\"^8.0.0\\",\\"splitting\\":\\"^1.0.6\\",\\"style-loader\\":\\"^1.3.0\\"}}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},,,,,,,,function(module,exports,__webpack_require__){eval("var api = __webpack_require__(3);\n            var content = __webpack_require__(14);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9mdXNpb24uc2Nzcz82ODBmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZnVzaW9uLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(4);\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, ".fusion--player{display:flex;justify-content:center}.fusion--player .fusion--viewport{position:relative;width:100%;height:100%}.fusion--player .fusion--viewport .fusion--scene{position:absolute;top:0;right:0;bottom:0;left:0;overflow-x:hidden;overflow-y:hidden;visibility:hidden;opacity:0}.fusion--player .fusion--viewport .fusion--scene.visible{visibility:visible;opacity:1}.fusion--player .fusion--viewport .fusion--scene.fusion--scene--iframe iframe.fusion--iframe{overflow:hidden;border:none}.fusion--player .fusion--viewport .fusion--scene .fusion--scene--content{position:absolute;top:0;right:0;bottom:0;left:0;transform-origin:top left;overflow:hidden}.fusion--player .fusion--viewport .fusion--scene .fusion--scene--content>*{position:absolute;width:100%;height:100%}.fusion--player .fusion--viewport .fusion--scene .fusion--scene--content>*>*{position:absolute;top:0;left:0}.fusion--player .fusion--viewport .fusion--scene--debugger--guidesWrapper{position:absolute;top:0;right:0;bottom:0;left:0;z-index:9999999;pointer-events:none}.fusion--player .fusion--viewport .fusion--scene--debugger--guidesWrapper .guide-horizontal-center{position:absolute;top:0;bottom:0;left:50%;width:1px;z-index:99999;border-left:1px dashed rgba(0,0,0,0.8)}.fusion--player .fusion--viewport .fusion--scene--debugger--guidesWrapper .guide-sceneBounds{position:absolute;top:0;right:0;bottom:0;left:0;transform-origin:top left;background-color:rgba(108,159,255,0.3)}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9mdXNpb24uc2Nzcz85ODFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZnVzaW9uLS1wbGF5ZXJ7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXJ9LmZ1c2lvbi0tcGxheWVyIC5mdXNpb24tLXZpZXdwb3J0e3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9LmZ1c2lvbi0tcGxheWVyIC5mdXNpb24tLXZpZXdwb3J0IC5mdXNpb24tLXNjZW5le3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6aGlkZGVuO3Zpc2liaWxpdHk6aGlkZGVuO29wYWNpdHk6MH0uZnVzaW9uLS1wbGF5ZXIgLmZ1c2lvbi0tdmlld3BvcnQgLmZ1c2lvbi0tc2NlbmUudmlzaWJsZXt2aXNpYmlsaXR5OnZpc2libGU7b3BhY2l0eToxfS5mdXNpb24tLXBsYXllciAuZnVzaW9uLS12aWV3cG9ydCAuZnVzaW9uLS1zY2VuZS5mdXNpb24tLXNjZW5lLS1pZnJhbWUgaWZyYW1lLmZ1c2lvbi0taWZyYW1le292ZXJmbG93OmhpZGRlbjtib3JkZXI6bm9uZX0uZnVzaW9uLS1wbGF5ZXIgLmZ1c2lvbi0tdmlld3BvcnQgLmZ1c2lvbi0tc2NlbmUgLmZ1c2lvbi0tc2NlbmUtLWNvbnRlbnR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7dHJhbnNmb3JtLW9yaWdpbjp0b3AgbGVmdDtvdmVyZmxvdzpoaWRkZW59LmZ1c2lvbi0tcGxheWVyIC5mdXNpb24tLXZpZXdwb3J0IC5mdXNpb24tLXNjZW5lIC5mdXNpb24tLXNjZW5lLS1jb250ZW50Pip7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uZnVzaW9uLS1wbGF5ZXIgLmZ1c2lvbi0tdmlld3BvcnQgLmZ1c2lvbi0tc2NlbmUgLmZ1c2lvbi0tc2NlbmUtLWNvbnRlbnQ+Kj4qe3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MH0uZnVzaW9uLS1wbGF5ZXIgLmZ1c2lvbi0tdmlld3BvcnQgLmZ1c2lvbi0tc2NlbmUtLWRlYnVnZ2VyLS1ndWlkZXNXcmFwcGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3otaW5kZXg6OTk5OTk5OTtwb2ludGVyLWV2ZW50czpub25lfS5mdXNpb24tLXBsYXllciAuZnVzaW9uLS12aWV3cG9ydCAuZnVzaW9uLS1zY2VuZS0tZGVidWdnZXItLWd1aWRlc1dyYXBwZXIgLmd1aWRlLWhvcml6b250YWwtY2VudGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO2xlZnQ6NTAlO3dpZHRoOjFweDt6LWluZGV4Ojk5OTk5O2JvcmRlci1sZWZ0OjFweCBkYXNoZWQgcmdiYSgwLDAsMCwwLjgpfS5mdXNpb24tLXBsYXllciAuZnVzaW9uLS12aWV3cG9ydCAuZnVzaW9uLS1zY2VuZS0tZGVidWdnZXItLWd1aWRlc1dyYXBwZXIgLmd1aWRlLXNjZW5lQm91bmRze3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3RyYW5zZm9ybS1vcmlnaW46dG9wIGxlZnQ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwOCwxNTksMjU1LDAuMyl9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/fusion/Fusion.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar LOG = \'[ Fusion ]\';\nvar DEBUG = true;\n\nvar Fusion_default =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   */\n  function _default() {\n    _classCallCheck(this, _default);\n\n    _defineProperty(this, "sceneDefinitions", {});\n  }\n\n  _createClass(_default, [{\n    key: "defineScene",\n    value: function defineScene(id, payload) {\n      DEBUG && console.log(LOG, \'defineScene()\', id);\n      this.sceneDefinitions[id] = payload;\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// CONCATENATED MODULE: ./src/fusion/core/FusionHelper.js\nfunction FusionHelper_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction FusionHelper_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FusionHelper_createClass(Constructor, protoProps, staticProps) { if (protoProps) FusionHelper_defineProperties(Constructor.prototype, protoProps); if (staticProps) FusionHelper_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar FusionHelper =\n/*#__PURE__*/\nfunction () {\n  function FusionHelper() {\n    FusionHelper_classCallCheck(this, FusionHelper);\n  }\n\n  FusionHelper_createClass(FusionHelper, null, [{\n    key: "appendHtml",\n    value: function appendHtml(target, markup) {\n      target.insertAdjacentHTML(\'beforeend\', markup);\n      return target.lastChild;\n    } //---\n    // DEPRECATED !!!! (use hero.helper.throttle etc.)\n    // https://github.com/m-gagne/limit.js\n    // (slightly modified)\n\n  }, {\n    key: "debounce",\n    value: function debounce(func, milliseconds, context) {\n      var baseFunction = func,\n          timer = null,\n          wait = milliseconds;\n      return function () {\n        var self = context || func,\n            args = arguments;\n\n        function complete() {\n          baseFunction.apply(self, args);\n          timer = null;\n        }\n\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(complete, wait);\n      };\n    } //---\n    // DEPRECATED !!!! (use hero.helper.throttle etc.)\n    // https://github.com/m-gagne/limit.js\n    // (slightly modified)\n\n  }, {\n    key: "throttle",\n    value: function throttle(func, milliseconds, context) {\n      var baseFunction = func,\n          lastEventTimestamp = null,\n          limit = milliseconds,\n          timeout,\n          lastCurrentTarget;\n      return function () {\n        var self = context || func,\n            args = arguments,\n            now = Date.now();\n\n        if (!lastEventTimestamp || now - lastEventTimestamp >= limit) {\n          lastEventTimestamp = now;\n          baseFunction.apply(self, args);\n\n          if (args[0] instanceof Event) {\n            lastCurrentTarget = args[0].currentTarget;\n          }\n        } else {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n\n          if (args[0] instanceof Event) {\n            args[0].currentTarget_ = lastCurrentTarget;\n          }\n\n          timeout = setTimeout(function () {\n            baseFunction.apply(self, args);\n          }, milliseconds);\n        }\n      };\n    }\n    /*!\n     * Check if an element is inside the viewport\n     * #TODO Consider:\n     *   + caching\n     *   + partially in viewport\n     *   + not relative to window but to parent container\n     * #PERFORMANCE getBoundingClientRect() might become a performance bottleneck\n     *              see https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n     *              and https://github.com/pelotoncycle/resize-observer/issues/5\n     * @param  {Node} el The element\n     * @return {Boolean} Returns true if element is in the viewport\n     */\n\n  }, {\n    key: "isInViewport",\n    value: function isInViewport(el) {\n      var distance = el.getBoundingClientRect();\n      return distance.top >= 0 && distance.left >= 0 && distance.bottom <= (window.innerHeight || document.documentElement.clientHeight) && distance.right <= (window.innerWidth || document.documentElement.clientWidth);\n    }\n  }]);\n\n  return FusionHelper;\n}();\n// EXTERNAL MODULE: ./src/fusion/Const.js\nvar Const = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneDebugger.js\nfunction SceneDebugger_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneDebugger_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneDebugger_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneDebugger_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneDebugger_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar SceneDebugger_LOG = \'[ SceneDebugger ]\';\n\nvar SceneDebugger_default =\n/*#__PURE__*/\nfunction () {\n  function _default(scene) {\n    var _this = this;\n\n    SceneDebugger_classCallCheck(this, _default);\n\n    this.scene = scene;\n    console.log(SceneDebugger_LOG, \'constructor()\', scene);\n    scene.on(Const["a" /* default */].SCENE_PRE_READY, function () {\n      _this.guidesWrapper = FusionHelper.appendHtml(scene.element.parentNode, "<div class=\\"fusion--scene--debugger--guidesWrapper\\"></div>");\n      ;\n      _this.guideHorizontalCenter = FusionHelper.appendHtml(_this.guidesWrapper, "<div class=\\"guide-horizontal-center\\"></div>");\n      ;\n      _this.guideSceneBounds = FusionHelper.appendHtml(_this.guidesWrapper, "<div class=\\"guide-sceneBounds\\"></div>");\n      ;\n    });\n    scene.on(Const["a" /* default */].SCENE_READY, function () {\n      setTimeout(function () {\n        _this.size();\n\n        if (scene.center != false && !scene.fit) {\n          window.addEventListener(\'resize\', FusionHelper.debounce(_this.center.bind(_this), 50));\n\n          _this.center();\n        }\n\n        if (scene.fit != false) {\n          window.addEventListener(\'resize\', FusionHelper.debounce(_this.fit.bind(_this), 50));\n\n          _this.fit();\n        }\n      }, 200);\n    });\n  }\n  /**\n   * Size\n   */\n\n\n  SceneDebugger_createClass(_default, [{\n    key: "size",\n    value: function size() {\n      this.guideSceneBounds.style.width = typeof this.scene.width == \'string\' ? this.scene.width : "".concat(this.scene.width, "px");\n      this.guideSceneBounds.style.height = typeof this.scene.height == \'string\' ? this.scene.height : "".concat(this.scene.height, "px");\n      this.scene.data.maxWidth && (this.guideSceneBounds.style.maxWidth = "".concat(this.scene.maxWidth, "px"));\n      this.scene.data.maxHeight && (this.guideSceneBounds.style.maxHeight = "".concat(this.scene.maxHeight, "px"));\n    }\n    /**\n     * Center guideSceneBounds\n     */\n\n  }, {\n    key: "center",\n    value: function center() {\n      this.guideSceneBounds.style.left = \'50%\';\n      this.guideSceneBounds.style.top = \'50%\';\n      this.guideSceneBounds.style.marginLeft = "-".concat(this.scene.width * this.scene.scale / 2, "px");\n      this.guideSceneBounds.style.marginTop = "-".concat(this.scene.height * this.scene.scale / 2, "px");\n    }\n    /**\n     * fit guideSceneBounds (responsive scaling)\n     */\n\n  }, {\n    key: "fit",\n    value: function fit() {\n      var availableWidth = this.scene.player.viewport.clientWidth;\n      var availableHeight = this.scene.player.viewport.clientHeight;\n      this.scene.scale = Math.min(availableWidth / this.scene.width, availableHeight / this.scene.height);\n      this.scene.scale = this.scene.scale > 1 ? 1 : this.scene.scale;\n      this.guideSceneBounds.style.transform = "scale(".concat(this.scene.scale, ")");\n      this.center();\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./libs/nanoevents.js\nvar nanoevents = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/fusion/core/Scene.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction Scene_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Scene_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Scene_createClass(Constructor, protoProps, staticProps) { if (protoProps) Scene_defineProperties(Constructor.prototype, protoProps); if (staticProps) Scene_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar Scene_LOG = \'[ Scene ]\';\nvar Scene_DEBUG = false;\n\nvar Scene_default =\n/*#__PURE__*/\nfunction (_NanoEvents) {\n  _inherits(_default, _NanoEvents);\n\n  function _default(player, data) {\n    var _this;\n\n    Scene_classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this));\n    _this.player = player;\n    _this.element;\n    _this.content;\n    _this.data = data;\n    _this.timeline; // Might be set by Hero for XD\n\n    _this.id = data.id;\n    _this.state = \'init\';\n    _this.width = data.width;\n    _this.height = data.height; // Debugger\n\n    if (_this.player.options.debug) {\n      _this["debugger"] = new SceneDebugger_default(_assertThisInitialized(_this));\n    } // Plugins\n\n\n    _this.initPlugins();\n\n    _this.emit(Const["a" /* default */].SCENE_PLUGINS_READY); // Preready\n\n\n    _this.on(Const["a" /* default */].SCENE_PRE_READY, function () {\n      _this.size();\n\n      if (_this.data.center != false && !_this.data.fit) {\n        window.addEventListener(\'resize\', FusionHelper.debounce(_this.center.bind(_assertThisInitialized(_this)), 50));\n\n        _this.center();\n      }\n\n      if (_this.data.fit != false) {\n        window.addEventListener(\'resize\', FusionHelper.debounce(_this.fit.bind(_assertThisInitialized(_this)), 50));\n\n        _this.fit();\n      } // Scan for hero fx\n\n\n      hero.fx.FxScanner.scan(_this.content); // Start timeline\n      // This has to deferred, since we might add the timeline with Hero for XD right after loading the scene\n\n      setTimeout(function () {\n        _this.timeline && _this.timeline.play(0);\n      }, 20);\n      Scene_DEBUG && console.log(Scene_LOG, _this.id, \': setting state to "ready"\');\n      _this.state = \'ready\';\n      Scene_DEBUG && console.log(Scene_LOG, _this.id, \': propagating SCENE_READY\');\n\n      _this.emit(Const["a" /* default */].SCENE_READY);\n    });\n\n    return _this;\n  }\n  /**\n   * Size\n   */\n\n\n  Scene_createClass(_default, [{\n    key: "size",\n    value: function size() {\n      this.content.style.width = typeof this.data.width == \'string\' ? this.data.width : "".concat(this.data.width, "px");\n      this.content.style.height = typeof this.data.height == \'string\' ? this.data.height : "".concat(this.data.height, "px");\n      this.data.maxWidth && (this.content.style.maxWidth = "".concat(this.data.maxWidth, "px"));\n      this.data.maxHeight && (this.content.style.maxHeight = "".concat(this.data.maxHeight, "px"));\n    }\n    /**\n     * Center content\n     */\n\n  }, {\n    key: "center",\n    value: function center() {\n      this.content.style.left = \'50%\';\n      this.content.style.top = \'50%\';\n      this.content.style.marginLeft = "-".concat(this.data.width * this.scale / 2, "px");\n      this.content.style.marginTop = "-".concat(this.data.height * this.scale / 2, "px");\n    }\n    /**\n     * fit content (responsive scaling)\n     */\n\n  }, {\n    key: "fit",\n    value: function fit() {\n      var availableWidth = this.player.viewport.clientWidth;\n      var availableHeight = this.player.viewport.clientHeight;\n      this.scale = Math.min(availableWidth / this.data.width, availableHeight / this.data.height);\n      this.scale = this.scale > 1 ? 1 : this.scale;\n      this.content.style.transform = "scale(".concat(this.scale, ")");\n      this.center();\n    }\n    /**\n     * Init plugins\n     */\n\n  }, {\n    key: "initPlugins",\n    value: function initPlugins() {\n      var _this2 = this;\n\n      // DEBUG && console.log(LOG, \'initPlugins(), plugins:\', this.data.plugins);\n      if (!this.data.plugins) return;\n      this.data.plugins.forEach(function (plugin) {\n        for (var key in hero.plugins) {\n          if (plugin.id == hero.plugins[key].manifest().id) {\n            new hero.plugins[key](_this2, plugin.options);\n          }\n        }\n      });\n    } ////////////////////////////////////////////////////\n    // Public API\n    ////////////////////////////////////////////////////\n\n    /**\n     * Get element within scene\n     * @return {Element} Requested element or undefined\n     */\n\n  }, {\n    key: "get",\n    value: function get(id) {\n      return this.element.querySelector("#".concat(id));\n    }\n    /**\n     * Query selector for elements within scene\n     * @return {array} Found elements or undefined\n     */\n\n  }, {\n    key: "query",\n    value: function query(_query) {\n      return this.element.querySelectorAll("".concat(_query));\n    }\n  }]);\n\n  return _default;\n}(nanoevents["a" /* default */]);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneDeferredBase.js\nfunction SceneDeferredBase_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SceneDeferredBase_typeof = function _typeof(obj) { return typeof obj; }; } else { SceneDeferredBase_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SceneDeferredBase_typeof(obj); }\n\nfunction SceneDeferredBase_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneDeferredBase_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneDeferredBase_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneDeferredBase_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneDeferredBase_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SceneDeferredBase_possibleConstructorReturn(self, call) { if (call && (SceneDeferredBase_typeof(call) === "object" || typeof call === "function")) { return call; } return SceneDeferredBase_assertThisInitialized(self); }\n\nfunction SceneDeferredBase_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SceneDeferredBase_getPrototypeOf(o) { SceneDeferredBase_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SceneDeferredBase_getPrototypeOf(o); }\n\nfunction SceneDeferredBase_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SceneDeferredBase_setPrototypeOf(subClass, superClass); }\n\nfunction SceneDeferredBase_setPrototypeOf(o, p) { SceneDeferredBase_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SceneDeferredBase_setPrototypeOf(o, p); }\n\n\n\n\nvar SceneDeferredBase_LOG = \'[ SceneHero ]\';\nvar SceneDeferredBase_DEBUG = false;\n\nvar SceneDeferredBase_default =\n/*#__PURE__*/\nfunction (_Scene) {\n  SceneDeferredBase_inherits(_default, _Scene);\n\n  function _default(player, data) {\n    SceneDeferredBase_classCallCheck(this, _default);\n\n    return SceneDeferredBase_possibleConstructorReturn(this, SceneDeferredBase_getPrototypeOf(_default).call(this, player, data));\n  }\n\n  SceneDeferredBase_createClass(_default, [{\n    key: "render",\n    value: function render() {\n      // Create Markup\n      this.element = FusionHelper.appendHtml(this.player.viewport, "<div class=\\"fusion--scene fusion--scene--default scene-".concat(this.id, "\\"></div>"));\n      this.content = FusionHelper.appendHtml(this.element, "<div class=\\"fusion--scene--content\\"></div>");\n      FusionHelper.appendHtml(this.content, this.data.html); // Execute scene script\n\n      var scriptElement = document.createElement(\'script\'); // Wrap script to inject additional player/scene data\n\n      var script = "\\n      (function(scene) {\\n        var playerId = \'".concat(this.player.id, "\';\\n        var sceneId = \'").concat(this.id, "\';\\n        var player = window.fusionPlayer[playerId];\\n        var scene = player.getScene(sceneId);\\n\\n        ").concat(this.data.script, "\\n      })();\\n    ");\n      scriptElement.innerHTML = script;\n      this.element.appendChild(scriptElement); // Propagate preready\n\n      this.emit(Const["a" /* default */].SCENE_PRE_READY);\n    }\n  }]);\n\n  return _default;\n}(Scene_default);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneDefault.js\nfunction SceneDefault_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SceneDefault_typeof = function _typeof(obj) { return typeof obj; }; } else { SceneDefault_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SceneDefault_typeof(obj); }\n\nfunction SceneDefault_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneDefault_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneDefault_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneDefault_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneDefault_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SceneDefault_possibleConstructorReturn(self, call) { if (call && (SceneDefault_typeof(call) === "object" || typeof call === "function")) { return call; } return SceneDefault_assertThisInitialized(self); }\n\nfunction SceneDefault_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SceneDefault_getPrototypeOf(o) { SceneDefault_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SceneDefault_getPrototypeOf(o); }\n\nfunction SceneDefault_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SceneDefault_setPrototypeOf(subClass, superClass); }\n\nfunction SceneDefault_setPrototypeOf(o, p) { SceneDefault_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SceneDefault_setPrototypeOf(o, p); }\n\n\n\n\nvar SceneDefault_LOG = \'[ SceneDefault ]\';\nvar SceneDefault_DEBUG = false;\n\nvar SceneDefault_default =\n/*#__PURE__*/\nfunction (_SceneDeferredBase) {\n  SceneDefault_inherits(_default, _SceneDeferredBase);\n\n  function _default(player, data) {\n    SceneDefault_classCallCheck(this, _default);\n\n    return SceneDefault_possibleConstructorReturn(this, SceneDefault_getPrototypeOf(_default).call(this, player, data));\n  }\n\n  SceneDefault_createClass(_default, [{\n    key: "load",\n    value: function load() {\n      SceneDefault_DEBUG && console.log(SceneDefault_LOG, \'load()\');\n      this.loadManifest(this.render.bind(this));\n    }\n  }, {\n    key: "loadManifest",\n    value: function loadManifest(resolve) {\n      var _this = this;\n\n      SceneDefault_DEBUG && console.log(SceneDefault_LOG, \'loadManifest()\');\n      var queue = new createjs.LoadQueue(false);\n      queue.loadManifest(this.data.path + \'/manifest.json\', true, \'\');\n      queue.on("fileload", function (evt) {\n        SceneDefault_DEBUG && console.log(SceneDefault_LOG, \'fileload(), \', evt.item.id, evt);\n        _this.data[evt.item.id] = evt.result;\n      });\n      queue.on("complete", function (evt) {\n        SceneDefault_DEBUG && console.log(SceneDefault_LOG, \'loadManifest(), manifest complete...\', evt);\n        resolve();\n      });\n      queue.on("error", function (evt) {\n        console.warn(\'Error in loadManifest() during preloading. \' + evt.message);\n      });\n    }\n  }]);\n\n  return _default;\n}(SceneDeferredBase_default);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneFlat.js\nfunction SceneFlat_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SceneFlat_typeof = function _typeof(obj) { return typeof obj; }; } else { SceneFlat_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SceneFlat_typeof(obj); }\n\nfunction SceneFlat_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneFlat_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneFlat_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneFlat_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneFlat_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SceneFlat_possibleConstructorReturn(self, call) { if (call && (SceneFlat_typeof(call) === "object" || typeof call === "function")) { return call; } return SceneFlat_assertThisInitialized(self); }\n\nfunction SceneFlat_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SceneFlat_getPrototypeOf(o) { SceneFlat_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SceneFlat_getPrototypeOf(o); }\n\nfunction SceneFlat_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SceneFlat_setPrototypeOf(subClass, superClass); }\n\nfunction SceneFlat_setPrototypeOf(o, p) { SceneFlat_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SceneFlat_setPrototypeOf(o, p); }\n\n\n\nvar SceneFlat_LOG = \'[ SceneFlat ]\';\nvar SceneFlat_DEBUG = true;\n\nvar SceneFlat_default =\n/*#__PURE__*/\nfunction (_Scene) {\n  SceneFlat_inherits(_default, _Scene);\n\n  function _default(player, data) {\n    SceneFlat_classCallCheck(this, _default);\n\n    return SceneFlat_possibleConstructorReturn(this, SceneFlat_getPrototypeOf(_default).call(this, player, data));\n  }\n\n  SceneFlat_createClass(_default, [{\n    key: "load",\n    value: function load() {\n      SceneFlat_DEBUG && console.log(SceneFlat_LOG, \'load()\');\n      this.wire();\n      this.render();\n    }\n  }, {\n    key: "wire",\n    value: function wire() {\n      var sceneElement = this.player.wrapper.querySelector(".fusion--scene.scene-".concat(this.id));\n      this.element = sceneElement;\n      this.content = sceneElement.querySelector(\'.fusion--scene--content\');\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      SceneFlat_DEBUG && console.log(SceneFlat_LOG, this.id, \' : render()\'); // window[`___${this.id}`]();\n\n      var sceneDefinition = fusion.sceneDefinitions[this.id];\n      sceneDefinition && sceneDefinition.preReady && sceneDefinition.preReady.call(this, this, this.player);\n      sceneDefinition && sceneDefinition.ready && this.on(Const["a" /* default */].SCENE_READY, sceneDefinition.ready.bind(this, this, this.player)); // Propagate preready\n\n      this.emit(Const["a" /* default */].SCENE_PRE_READY);\n    }\n  }]);\n\n  return _default;\n}(Scene_default);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneEmbedded.js\nfunction SceneEmbedded_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SceneEmbedded_typeof = function _typeof(obj) { return typeof obj; }; } else { SceneEmbedded_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SceneEmbedded_typeof(obj); }\n\nfunction SceneEmbedded_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneEmbedded_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneEmbedded_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneEmbedded_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneEmbedded_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SceneEmbedded_possibleConstructorReturn(self, call) { if (call && (SceneEmbedded_typeof(call) === "object" || typeof call === "function")) { return call; } return SceneEmbedded_assertThisInitialized(self); }\n\nfunction SceneEmbedded_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SceneEmbedded_getPrototypeOf(o) { SceneEmbedded_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SceneEmbedded_getPrototypeOf(o); }\n\nfunction SceneEmbedded_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SceneEmbedded_setPrototypeOf(subClass, superClass); }\n\nfunction SceneEmbedded_setPrototypeOf(o, p) { SceneEmbedded_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SceneEmbedded_setPrototypeOf(o, p); }\n\n\nvar SceneEmbedded_LOG = \'[ SceneEmbedded ]\';\nvar SceneEmbedded_DEBUG = false;\n\nvar SceneEmbedded_default =\n/*#__PURE__*/\nfunction (_SceneDeferredBase) {\n  SceneEmbedded_inherits(_default, _SceneDeferredBase);\n\n  function _default(player, data) {\n    SceneEmbedded_classCallCheck(this, _default);\n\n    return SceneEmbedded_possibleConstructorReturn(this, SceneEmbedded_getPrototypeOf(_default).call(this, player, data));\n  }\n\n  SceneEmbedded_createClass(_default, [{\n    key: "load",\n    value: function load() {\n      SceneEmbedded_DEBUG && console.log(SceneEmbedded_LOG, \'load()\');\n      this.gatherData(this.render.bind(this));\n    }\n  }, {\n    key: "gatherData",\n    value: function gatherData(resolve) {\n      SceneEmbedded_DEBUG && console.log(SceneEmbedded_LOG, \'gatherData()\');\n      this.data.html = this.getHeroFragment("hero--markup--".concat(this.id), \'text/hero-markup\');\n      this.data.script = this.getHeroFragment("hero--script--".concat(this.id), \'text/hero-script\');\n      resolve();\n    }\n  }, {\n    key: "getHeroFragment",\n    value: function getHeroFragment(id, type) {\n      var scriptTag = document.querySelector("#".concat(id, "[type=\\"").concat(type, "\\"]"));\n      return scriptTag ? scriptTag.innerHTML : undefined;\n    }\n  }]);\n\n  return _default;\n}(SceneDeferredBase_default);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/SceneIframe.js\nfunction SceneIframe_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SceneIframe_typeof = function _typeof(obj) { return typeof obj; }; } else { SceneIframe_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SceneIframe_typeof(obj); }\n\nfunction SceneIframe_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction SceneIframe_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction SceneIframe_createClass(Constructor, protoProps, staticProps) { if (protoProps) SceneIframe_defineProperties(Constructor.prototype, protoProps); if (staticProps) SceneIframe_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction SceneIframe_possibleConstructorReturn(self, call) { if (call && (SceneIframe_typeof(call) === "object" || typeof call === "function")) { return call; } return SceneIframe_assertThisInitialized(self); }\n\nfunction SceneIframe_getPrototypeOf(o) { SceneIframe_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SceneIframe_getPrototypeOf(o); }\n\nfunction SceneIframe_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction SceneIframe_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SceneIframe_setPrototypeOf(subClass, superClass); }\n\nfunction SceneIframe_setPrototypeOf(o, p) { SceneIframe_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SceneIframe_setPrototypeOf(o, p); }\n\nfunction SceneIframe_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar SceneIframe_LOG = \'[ SceneIframe ]\';\n\nvar SceneIframe_default =\n/*#__PURE__*/\nfunction (_Scene) {\n  SceneIframe_inherits(_default, _Scene);\n\n  function _default(player, data) {\n    var _this;\n\n    SceneIframe_classCallCheck(this, _default);\n\n    _this = SceneIframe_possibleConstructorReturn(this, SceneIframe_getPrototypeOf(_default).call(this, player, data));\n\n    SceneIframe_defineProperty(SceneIframe_assertThisInitialized(_this), "iframe", void 0);\n\n    return _this;\n  }\n\n  SceneIframe_createClass(_default, [{\n    key: "load",\n    value: function load() {\n      console.log(SceneIframe_LOG, \'load()\');\n      this.render();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // Create Markup\n      this.element = FusionHelper.appendHtml(this.viewport, "<div class=\\"fusion--scene fusion--scene--iframe scene-".concat(this.id, "\\"></div>"));\n      this.iframe = FusionHelper.appendHtml(this.element, "<iframe class=\\"fusion--iframe\\" src=\\"".concat(this.data.path, "\\" frameborder=\\"0\\" allowTransparency=\\"true\\"></iframe>"));\n      FusionHelper.appendHtml(this.element, this.data.html); // Iframe Size\n\n      this.iframe.style.width = \'100%\';\n      this.iframe.style.height = \'100%\'; // Propagate preready\n\n      this.emit(Const["a" /* default */].SCENE_PRE_READY);\n    }\n  }]);\n\n  return _default;\n}(Scene_default);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/DataStore.js\nfunction DataStore_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DataStore_typeof = function _typeof(obj) { return typeof obj; }; } else { DataStore_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DataStore_typeof(obj); }\n\nfunction DataStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction DataStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataStore_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DataStore_possibleConstructorReturn(self, call) { if (call && (DataStore_typeof(call) === "object" || typeof call === "function")) { return call; } return DataStore_assertThisInitialized(self); }\n\nfunction DataStore_getPrototypeOf(o) { DataStore_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataStore_getPrototypeOf(o); }\n\nfunction DataStore_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction DataStore_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DataStore_setPrototypeOf(subClass, superClass); }\n\nfunction DataStore_setPrototypeOf(o, p) { DataStore_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataStore_setPrototypeOf(o, p); }\n\nfunction DataStore_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar DataStore_DEBUG = true;\nvar DataStore_LOG = \'[ DataStore ]\';\n\nvar DataStore_default =\n/*#__PURE__*/\nfunction (_NanoEvents) {\n  DataStore_inherits(_default, _NanoEvents);\n\n  function _default() {\n    var _this;\n\n    DataStore_classCallCheck(this, _default);\n\n    _this = DataStore_possibleConstructorReturn(this, DataStore_getPrototypeOf(_default).call(this));\n\n    DataStore_defineProperty(DataStore_assertThisInitialized(_this), "data", {});\n\n    DataStore_DEBUG && console.log(DataStore_LOG, \'constructor()\');\n    return _this;\n  }\n\n  DataStore_createClass(_default, [{\n    key: "set",\n    value: function set(key, value) {\n      this.data[key] = value;\n      this.emit(\'change\', key, value);\n    }\n  }, {\n    key: "get",\n    value: function get(key) {\n      return this.data[key];\n    }\n  }]);\n\n  return _default;\n}(nanoevents["a" /* default */]);\n\n\n// CONCATENATED MODULE: ./src/fusion/core/Player.js\nfunction Player_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Player_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Player_createClass(Constructor, protoProps, staticProps) { if (protoProps) Player_defineProperties(Constructor.prototype, protoProps); if (staticProps) Player_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Player_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\nvar Player_LOG = \'[ FusionPlayer ]\';\nvar Player_DEBUG = true;\n/**\n * FusionPlayer Class\n */\n\nvar Player_default =\n/*#__PURE__*/\nfunction () {\n  function _default(options) {\n    var _this = this;\n\n    Player_classCallCheck(this, _default);\n\n    Player_defineProperty(this, "defaults", {\n      overflowX: \'hidden\',\n      overflowY: \'hidden\'\n    });\n\n    Player_defineProperty(this, "options", void 0);\n\n    Player_defineProperty(this, "wrapper", void 0);\n\n    Player_defineProperty(this, "viewport", void 0);\n\n    Player_defineProperty(this, "scenes", []);\n\n    Player_defineProperty(this, "currentScene", void 0);\n\n    Player_defineProperty(this, "lastScene", void 0);\n\n    Player_defineProperty(this, "data", void 0);\n\n    window.fusionPlayer = window.fusionPlayer ? window.fusionPlayer : {};\n    window.fusionPlayer[options.id] = this;\n    this.options = Object.assign(this.defaults, options);\n    this.id = options.id;\n    this.data = new DataStore_default();\n    this.wrapper = document.getElementById(options.id);\n    this.wrapper.classList.add(\'fusion--player\');\n    this.createMarkup();\n    this.viewport = this.wrapper.querySelector(\'.fusion--viewport\'); // Viewport is now always 100% of player\n    // this.viewport.style.width = (typeof this.options.width == \'string\') ? this.options.width : `${this.options.width}px`;\n    // this.viewport.style.height = (typeof this.options.height == \'string\') ? this.options.height : `${this.options.height}px`;\n\n    this.viewport.style.overflow = "auto"; // Create scene objects\n\n    this.options.scenes.forEach(function (scene) {\n      scene.width = scene.width || _this.options.width;\n      scene.height = scene.height || _this.options.height;\n\n      switch (scene.type) {\n        case \'flat\':\n          _this.scenes.push(new SceneFlat_default(_this, scene));\n\n          break;\n\n        case \'embedded\':\n          _this.scenes.push(new SceneEmbedded_default(_this, scene));\n\n          break;\n\n        case \'iframe\':\n          _this.scenes.push(new SceneIframe_default(_this, scene));\n\n          break;\n\n        default:\n          _this.scenes.push(new SceneDefault_default(_this, scene));\n\n      }\n    }); // this.loadScene(\'scene1\');\n  }\n\n  Player_createClass(_default, [{\n    key: "createMarkup",\n    value: function createMarkup() {\n      // With type \'flat\' we might have created the viewport manually\n      if (this.wrapper.querySelector(\'.fusion--viewport\')) return;\n      FusionHelper.appendHtml(this.wrapper, \'<div class="fusion--viewport"></div>\');\n    }\n  }, {\n    key: "getScene",\n    value: function getScene(id) {\n      return this.scenes.find(function (item) {\n        return item.id === id;\n      });\n    }\n  }, {\n    key: "loadScene",\n    value: function loadScene(id) {\n      var _this2 = this;\n\n      //   const scene = this.getScene(id);\n      //   if (!scene) {\n      //     console.error(LOG, \'Scene not found:\', id);\n      //     return;\n      //   }\n      //   scene.load();\n      // }\n      // /**\n      //  * Open scene\n      //  * Opens a scene and loads it first if needed\n      //  * @param {string} id Scene id \n      //  */\n      // openScene(id) {\n      Player_DEBUG && console.log(Player_LOG, \'openScene()\', "{".concat(id, "}"));\n      var scene = this.getScene(id);\n      Player_DEBUG && console.log(Player_LOG, \'openScene()\', "{".concat(id, "}"), "state: ".concat(scene.state)); // Bail\n\n      if (scene === this.currentScene) return; // Scene is loaded and ready\n\n      if (scene && scene.state === \'ready\') {\n        this.lastScene = this.currentScene;\n        this.currentScene = scene; // Fade out last scene\n\n        this.lastScene && setTimeout(function () {\n          _this2.lastScene.element.classList.remove(\'visible\');\n        }, 100); // Bring to front\n\n        scene.element.parentNode.appendChild(scene.element); // Fade in\n\n        setTimeout(function () {\n          _this2.currentScene.element.classList.add(\'visible\');\n        }, 1);\n      } // Scene is not ready yet\n      else if (scene) {\n          // scene.on(Const.SCENE_READY, this.openScene.bind(this, id));\n          scene.on(Const["a" /* default */].SCENE_READY, this.loadScene.bind(this, id)); // this.loadScene(id);\n\n          scene.load();\n        } // Scene not found\n        else {\n            console.error(Player_LOG, \'Scene not found:\', id);\n          }\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./style/fusion.scss\nvar style_fusion = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/fusion.js\n\n\n\n\n\nvar version = __webpack_require__(5).version;\n\nconsole.log(\'[ Fusion ]\', \'VERSION\', version); // Global Fusion instance\n\nwindow.fusion = new Fusion_default(); // Use Fusion instance as namespace for all classes\n\nObject.assign(window.fusion, {\n  "const": Const["a" /* default */],\n  Player: Player_default\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')}]);